# -*- coding: utf-8 -*-
"""IMDB movie.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12GPAcYNxzHd6L_F49nEv7B525oQPBdtG
"""

#   Importing all the necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""Loading the data into the data frame."""

#Loading the IMDB dataset to the Dataframe
maint_data = pd.read_csv('/content/Imdb Movie Dataset.csv')

maint_data.head(30)

#Displaying the last 5 rows of the dataframe
maint_data.tail()

maint_data

# Check the information of the dataframe
maint_data.info()

#    Checking the types of data
maint_data.dtypes

# checking the dimensions of the dataframe(rows x columns)
maint_data.shape

#display the column names in the dataframe
maint_data.columns

#Checking the descriptive statistics of the data within the DataFrame
maint_data.describe()

"""Dropping the duplicate rows if any"""

# checking the number of duplicated rows in the dataframe
maint_data.duplicated().sum()

#Drop all the duplicated rows
maint_data.drop_duplicates(inplace=True)

#check if all the duplicate rows are deleted
maint_data.duplicated().sum()

"""Handling the missing or null values"""

#checking for all the null values in the dataframe
maint_data.isna().sum()

threshold = len(maint_data) * 0.4
maint_data = maint_data.dropna(thresh=threshold, axis=1)

threshold = len(maint_data.columns) * 0.5
maint_data = maint_data.dropna(thresh=threshold, axis=0)

maint_data['title'].fillna('Unknown', inplace=True)
maint_data['status'].fillna('Unknown', inplace=True)

from sklearn.impute import SimpleImputer
numeric_cols = ['vote_average', 'runtime', 'budget']
imputer = SimpleImputer(strategy='mean')
maint_data[numeric_cols] = imputer.fit_transform

#checking for all the null values in the dataframe
maint_data.isna().sum()

data = {
    'id': [0, 1, 2],
    'title': [0, 'Movie A', 'Movie B'],
    'vote_average': [0, 4.5, 6.7],
    'vote_count': [0, 100, 200],
    # Add more columns as per your dataset
}

# Create a DataFrame
df = pd.DataFrame(data)

# Drop columns with all zeros
df_no_zeros = df.loc[:, (df != 0).any(axis=0)]

print(df_no_zeros)

maint_data.isna().sum()

import pandas as pd

# Create a DataFrame with the given column information
data = {
    "id": [0],
    "title": [0],
    "vote_average": [0],
    "vote_count": [0],
    "status": [0],
    "release_date": [181600],
    "revenue": [0],
    "runtime": [0],
    "adult": [0],
    "budget": [0],
    "imdb_id": [487739],
    "original_language": [0],
    "original_title": [13],
    "overview": [215711],
    "popularity": [0],
    "genres": [414706],
    "production_companies": [568160],
    "production_countries": [463214],
    "spoken_languages": [440387],
}

df = pd.DataFrame(data)

# Drop specific columns
columns_to_drop = [
    "release_date", "imdb_id", "overview",
    "genres", "production_companies",
    "production_countries", "spoken_languages"
]
df_cleaned = df.drop(columns=columns_to_drop)

print("DataFrame after dropping specified columns:")
print(df_cleaned)